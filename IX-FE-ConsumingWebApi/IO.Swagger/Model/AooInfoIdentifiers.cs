/* 
 * REGISTRY API V1
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// AooInfoIdentifiers
    /// </summary>
    [DataContract]
    public partial class AooInfoIdentifiers :  IEquatable<AooInfoIdentifiers>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AooInfoIdentifiers" /> class.
        /// </summary>
        /// <param name="vatNumber">vatNumber.</param>
        /// <param name="fiscalCode">fiscalCode.</param>
        /// <param name="ipaCode">ipaCode.</param>
        /// <param name="officeCode">officeCode.</param>
        public AooInfoIdentifiers(string vatNumber = default(string), string fiscalCode = default(string), string ipaCode = default(string), string officeCode = default(string))
        {
            this.VatNumber = vatNumber;
            this.FiscalCode = fiscalCode;
            this.IpaCode = ipaCode;
            this.OfficeCode = officeCode;
        }
        
        /// <summary>
        /// Gets or Sets VatNumber
        /// </summary>
        [DataMember(Name="vatNumber", EmitDefaultValue=false)]
        public string VatNumber { get; set; }

        /// <summary>
        /// Gets or Sets FiscalCode
        /// </summary>
        [DataMember(Name="fiscalCode", EmitDefaultValue=false)]
        public string FiscalCode { get; set; }

        /// <summary>
        /// Gets or Sets IpaCode
        /// </summary>
        [DataMember(Name="ipaCode", EmitDefaultValue=false)]
        public string IpaCode { get; set; }

        /// <summary>
        /// Gets or Sets OfficeCode
        /// </summary>
        [DataMember(Name="officeCode", EmitDefaultValue=false)]
        public string OfficeCode { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AooInfoIdentifiers {\n");
            sb.Append("  VatNumber: ").Append(VatNumber).Append("\n");
            sb.Append("  FiscalCode: ").Append(FiscalCode).Append("\n");
            sb.Append("  IpaCode: ").Append(IpaCode).Append("\n");
            sb.Append("  OfficeCode: ").Append(OfficeCode).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AooInfoIdentifiers);
        }

        /// <summary>
        /// Returns true if AooInfoIdentifiers instances are equal
        /// </summary>
        /// <param name="input">Instance of AooInfoIdentifiers to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AooInfoIdentifiers input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.VatNumber == input.VatNumber ||
                    (this.VatNumber != null &&
                    this.VatNumber.Equals(input.VatNumber))
                ) && 
                (
                    this.FiscalCode == input.FiscalCode ||
                    (this.FiscalCode != null &&
                    this.FiscalCode.Equals(input.FiscalCode))
                ) && 
                (
                    this.IpaCode == input.IpaCode ||
                    (this.IpaCode != null &&
                    this.IpaCode.Equals(input.IpaCode))
                ) && 
                (
                    this.OfficeCode == input.OfficeCode ||
                    (this.OfficeCode != null &&
                    this.OfficeCode.Equals(input.OfficeCode))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.VatNumber != null)
                    hashCode = hashCode * 59 + this.VatNumber.GetHashCode();
                if (this.FiscalCode != null)
                    hashCode = hashCode * 59 + this.FiscalCode.GetHashCode();
                if (this.IpaCode != null)
                    hashCode = hashCode * 59 + this.IpaCode.GetHashCode();
                if (this.OfficeCode != null)
                    hashCode = hashCode * 59 + this.OfficeCode.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
